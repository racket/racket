name: CI Pull Request

on: [pull_request]

permissions:
  contents: read

jobs:

  buildtest-linux-x86:
    container:
      image: racket/racket-ci:latest
      options: --init

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: make CPUS="$(nproc)" PKGS=""
    - name: Extend PATH with Racket executable
      run: echo "${GITHUB_WORKSPACE}/racket/bin" >> $GITHUB_PATH
    - name: Test
      run: bash .github/scripts/run-racket-tests.sh

  buildtest-macos:

    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: make CPUS="$(sysctl -n hw.physicalcpu)" PKGS=""
    - name: Extend PATH with Racket executable
      run: echo "${GITHUB_WORKSPACE}/racket/bin" >> $GITHUB_PATH
    - name: Test
      run: bash .github/scripts/run-racket-tests.sh
    - name: Tarball
      run: tar -cvjf racketcs-macos-aarch64_git${{ github.sha }}.tar.bz2 racket
    - uses: actions/upload-artifact@v4
      with:
        name: racketcs-macos-aarch64_git${{ github.sha }}
        path: racketcs-macos-aarch64_git${{ github.sha }}.tar.bz2

  build-ios:
    runs-on: macos-14
    needs: buildtest-macos
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: racketcs-macos-aarch64_git${{ github.sha }}
        path: ${{ github.workspace }}
    - name: Untar host Racket
      run: |
        mkdir host-racket
        tar -xvjf racketcs-macos-aarch64_git${{ github.sha }}.tar.bz2 -C host-racket --strip-components 1
    - name: Build iOS Racket
      run: |
        set -euxo pipefail
        mkdir -p racket/src/build-ios
        pushd racket/src/build-ios
        ../configure \
          --host=aarch64-apple-darwin \
          --enable-ios=iPhoneOS \
          --enable-racket=${{ github.workspace }}/host-racket/bin/racket \
          --enable-scheme=${{ github.workspace }}/host-racket/src/build/cs/c
        make
        make install

  build-pb-ios:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: Build LibFFI
      run: |
        set -euxo pipefail
        brew install automake libtool
        git clone https://github.com/libffi/libffi
        cd libffi
        git checkout v3.4.6
        ./autogen.sh
        python generate-darwin-source-and-headers.py --only-ios
        xcodebuild \
          -configuration release \
          -target libffi-iOS \
          -scheme libffi-iOS \
          -sdk "$(xcode-select -p)/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk" \
          -derivedDataPath dist \
          IPHONEOS_DEPLOYMENT_TARGET=12
    - name: Build PB iOS Racket
      run: |
        set -euxo pipefail
        make fetch-pb
        mkdir -p racket/src/build
        cd racket/src/build
        cat >libffi.pc <<EOF
          prefix=${GITHUB_WORKSPACE}/libffi/dist/Build/Products/Release-iphoneos
          exec_prefix=\${prefix}
          libdir=\${exec_prefix}
          toolexeclibdir=\${libdir}
          includedir=\${prefix}/include/ffi

          Name: libffi
          Description: Library supporting Foreign Function Interfaces
          Version: 3.4.6
          Libs: -L\${toolexeclibdir} -lffi
          Cflags: -I\${includedir}
        EOF
        cat libffi.pc
        env PKG_CONFIG_PATH="$(pwd)" \
          ../configure \
            --host=aarch64-apple-darwin \
            --enable-ios=iPhoneOS \
            --enable-pb \
            --enable-racket=auto \
            --enable-libffi
        make
        make install
