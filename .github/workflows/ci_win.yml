name: CI Win

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

jobs:
  
# Build jobs
# These jobs build each Racket component separately and tests on the component start as soon as each
# component finishes building.
  buildtest-win:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        mode: ['3m', 'CS']
    
    # According to
    # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners#windows-server-2019
    # VS2019 is what is installed in the hosted runners:
    #   Version: VisualStudio/16.3.6+29418.71
    #   Location: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise
    steps:
    - uses: actions/checkout@v5
    - name: Build 3m
      if: matrix.mode == '3m'
      shell: cmd
      run: |
        call racket\src\worksp\msvcprep.bat x86_amd64
        nmake bc-base RACKETBC_SUFFIX=
    - name: Build CS
      if: matrix.mode == 'CS'
      shell: cmd
      run: |
        call racket\src\worksp\msvcprep.bat x86_amd64
        nmake cs-base RACKETCS_SUFFIX=
    - name: Check reported racket version
      shell: cmd
      run: |
        call racket\racket.exe --version
    - name: Install catalog
      shell: cmd
      run: |
        racket\racket.exe -l- pkg/dirs-catalog --immediate %cd%\rktcat %cd%\pkgs\
        racket\raco.exe pkg config --set catalogs %cd%\rktcat\ https://pkgs.racket-lang.org https://planet-compats.racket-lang.org
    - name: Install Testing Deps
      shell: cmd
      run: |
        call racket\raco.exe pkg install --auto --no-docs racket-test unstable-flonum-lib net-test
    - name: Run tests/racket/test
      shell: cmd
      run: |
        call .\racket\src\worksp\msvcprep.bat x86_amd64
        racket\raco.exe test -l tests/racket/test
    - name: Run tests/racket/contract/all
      shell: cmd
      run: racket\racket.exe -l tests/racket/contract/all
    - name: Run tests/json/json
      shell: cmd
      run: racket\raco.exe test -l tests/json/json
    - name: Run tests/file/main
      shell: cmd
      run: racket\raco.exe test -l tests/file/main
    - name: Run tests/net/head
      shell: cmd
      run: racket\raco.exe test -l tests/net/head
    - name: Run tests/net/uri-codec
      shell: cmd
      run: racket\raco.exe test -l tests/net/uri-codec
    - name: Run tests/net/url
      shell: cmd
      run: racket\raco.exe test -l tests/net/url
    - name: Run tests/net/url-port
      shell: cmd
      run: racket\raco.exe test -l tests/net/url-port
    - name: Run tests/net/encoders
      shell: cmd
      run: racket\raco.exe test -l tests/net/encoders
    - name: Run tests/openssl/basic
      shell: cmd
      run: racket\raco.exe test -l tests/openssl/basic
    - name: Run tests/openssl/https
      shell: cmd
      run: racket\raco.exe test -l tests/openssl/https
    - name: Run tests/match/main
      shell: cmd
      run: racket\raco.exe test -l tests/match/main
    - name: Run tests/zo-path
      shell: cmd
      run: racket\raco.exe test -l tests/zo-path
    - name: Run tests/xml
      shell: cmd
      run: racket\raco.exe test -c tests/xml
    - name: Run tests/future
      shell: cmd
      run: racket\raco.exe test -c tests/future
    - name: Install db tests dependency
      shell: cmd
      run: racket\raco.exe pkg install --auto db-test
    - name: Run db tests
      shell: cmd
      run: racket\raco.exe test -l tests/db/all-tests
    - name: Run tests/stxparse
      shell: cmd
      run: racket\raco.exe test -c tests/stxparse
    - name: Run syntax tests
      shell: cmd
      run: racket\raco.exe test -c tests/syntax
    - name: Install demo tests dependency
      shell: cmd
      run: racket\raco.exe pkg install --auto compiler-test
    - name: Run demod tests
      shell: cmd
      run: racket\raco.exe test  -l tests/compiler/demodularizer/demod-test.rkt
